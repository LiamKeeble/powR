install.packages("metafor", dependencies=TRUE)
install.packages("metafor", dependencies=TRUE)
install.packages("tidyverse", dependencies=TRUE)
q()
install.packages("tidyverse", dependencies=TRUE)
q()
install.packages("tidyverse", dependencies=TRUE)
install.packages("metafor", dependencies=TRUE)
install.packages("lme4", dependencies=TRUE)
install.packages("bibliometrix", dependencies=TRUE)
install.packages("rstan", dependencies=TRUE)
q()
install.packages("rstan", dependencies=TRUE)
example(stan_model, package="rstan", run.dontrun = TRUE)
install.packages("devtools", dependencies=TRUE)
install.packages("roxygen2", dependencies=TRUE)
q()
library(devtools)
q()
install.packages("roxygen2")
install.packages("devtools")
install.packages("gert")
q()
install.packages("gert")
install.packages("devtools")
library(devtools)
install.packages("usethis")
install.packages("devtools",dependencies=TRUE)
q()
install.packages("devtools",dependencies=TRUE)
q()
install.packages("devtools",dependencies=TRUE)
q()
install.packages("devtools",dependencies=TRUE)
install.packages("roxygen2",dependencies=TRUE)
devtools::install_github("stan-dev/cmdstanr")
install.packages(c("coda","mvtnorm","loo","dagitty"))
devtools::install_github("rmcelreath/rethinking")
devtools::install_github("pmcharrison/psychTestR")
install.packages("shiny")
install.packages("htmltools")
install.packages("ape")
install.packages("ape")
install.packages("phangorn")
q()
devtools::install("measuringBehaviour")
library(measuringBehaviour)
first()
q()
library(measuringBehaviour)
first()
q()
devtools::install(measuringBehaviour)
devtools::install("measuringBehaviour")
library(measuringBehaviour)
first()
q()
devtools::document("measuringBehaviour")
devtools::install("measuringBehaviour")
library(measuringBehaviour)
first()
q()
devtools::document("measuringBehavR")
devtools::install("measuringBehavR")
library(measuringBehavR)
library(measuringBehaviour)
first()
q()
devtools::document()
devtools::document("measuringBehaviour")
devtools::install("measuringBehaviour")
library(measuringBehaviour)
q()
devtools::create("powR")
q()
